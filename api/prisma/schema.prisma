// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto())  @map("_id") @db.ObjectId
  firstName String    
  lastName  String
  email     String    @unique
  password  String
  avatar    String?
  createdAt DateTime  @default(now())
  agent     Agent?
}

model Agent {
  id        String   @id @default(auto())  @map("_id") @db.ObjectId
  userId    String   @db.ObjectId @unique
  user      User     @relation(fields: [userId], references: [id])
  agencyId  String   @db.ObjectId
  agency    Agency   @relation(fields: [agencyId], references: [id])
  listings  Listing[]
}

model Agency {
  id          String    @id @default(auto())  @map("_id") @db.ObjectId
  name        String
  address     String
  description String
  logo        String
  coverImage  String
  agents      Agent[]
  listings    Listing[]
}

model Listing {
  id                          String    @id @default(auto())  @map("_id") @db.ObjectId
  address                     String    @unique
  googlePlaceId               String
  description                 String
  price                       Float
  bedrooms                    Int
  baths                       Int
  carSpaces                   Int
  landSize                    Float
  lat                         Float
  lng                         Float
  listingType                 ListingType
  propertyType                PropertyType
  outdoorFeatures             OutdoorFeature[]
  indoorFeatures              IndoorFeature[]
  energyFeatures              EnergyFeature[]
  climateControlFeatures      ClimatControlFeature[]
  accessibilityFeatures       AccessibilityFeature[]
  propertyRequirements        PropertyRequirement[]
  images                      Image[]
  agentId                     String   @db.ObjectId
  agent                       Agent    @relation(fields: [agentId], references: [id])
  agencyId                    String   @db.ObjectId
  agency                      Agency   @relation(fields: [agencyId], references: [id])
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  main      String
  thumbnail String
  listingId String   @db.ObjectId
  listing   Listing  @relation(fields: [listingId], references: [id])
}

enum ListingType {
  sale 
  rent
}

enum PropertyType {
  house
  townHouse
  apartmentUnit
  villa
}

enum OutdoorFeature {
  swimmingPool
  garage
  balcony
  outdoorArea
  undercoverParking
  fullyFenced
  tennisCourt
  shed
  outdoorSpa
}

enum IndoorFeature {
  ensuite
  dishwasher
  study
  robes
}

enum EnergyFeature {
  solarPanels
  highEnergyEfficiency
  solarHotwater
  waterTank
}

enum ClimatControlFeature {
  airConditioning
  heating
  fireplace
}

enum AccessibilityFeature {
  singleStory
  stepFreeEntry
  elavator
  wideDoorways
  rollInShower
  accessibleParking
  bathroomGrabRails
}

enum PropertyRequirement {
  furnished
  petsConsidered
  na
}
